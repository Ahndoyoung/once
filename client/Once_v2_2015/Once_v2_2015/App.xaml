<Application x:Class="Once_v2_2015.App" 
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
             xmlns:local="clr-namespace:Once_v2_2015" 
             StartupUri="View/MainWindow.xaml" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             d1p1:Ignorable="d" 
             xmlns:d1p1="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:class="clr-namespace:Once_v2_2015.Class">
    <Application.Resources>
        <vm:ViewModelLocator x:Key="Locator" d:IsDataSource="True" xmlns:vm="clr-namespace:Once_v2_2015.ViewModel" />
        <class:PassThroughConverter x:Key="MyConverter"/>

        <!-- BrownButton -->
        <ControlTemplate TargetType="Button" x:Key="BrownRadius">
            <Border x:Name="ButtonBackground" CornerRadius="20" BorderBrush="#FF292929" BorderThickness="1">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                        <GradientStop Color="#FFC59971" Offset="0"/>
                        <GradientStop Color="#FF603A17" Offset="1"/>
                    </LinearGradientBrush>
                </Border.Background>
                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Border>

            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="ButtonBackground">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FF6C5036" Offset="0"/>
                                <GradientStop Color="#FF2B1B0D" Offset="1"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style TargetType="Button" x:Key="BrownButton">
            <Setter Property="Template" Value="{StaticResource BrownRadius}"></Setter>
        </Style>

        <!-- IvoryButton -->
        <ControlTemplate TargetType="Button" x:Key="IvoryRadius">
            <Border x:Name="ButtonBackground" CornerRadius="20" BorderBrush="#FF292929" BorderThickness="1">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                        <GradientStop Color="#FFF4EED8" Offset="0"/>
                        <GradientStop Color="#FFC1AB94" Offset="1"/>
                    </LinearGradientBrush>
                </Border.Background>
                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Border>

            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="ButtonBackground">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFCDC39D" Offset="0"/>
                                <GradientStop Color="#FF745C44" Offset="1"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style TargetType="Button" x:Key="IvoryButton">
            <Setter Property="Template" Value="{StaticResource IvoryRadius}"></Setter>
        </Style>

        <!-- WhippingButton -->
        <ControlTemplate TargetType="Button" x:Key="WhippingRadius">
            <Border x:Name="ButtonBackground" CornerRadius="20" BorderBrush="#FF292929" BorderThickness="1">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                        <GradientStop Color="#FFFAF49E" Offset="0"/>
                        <GradientStop Color="#FFDDBF8C" Offset="1"/>
                    </LinearGradientBrush>
                </Border.Background>
                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Border>

            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="ButtonBackground">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFD4D084" Offset="0"/>
                                <GradientStop Color="#FF9C8762" Offset="1"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style TargetType="Button" x:Key="WhippingButton">
            <Setter Property="Template" Value="{StaticResource WhippingRadius}"></Setter>
        </Style>

        <!-- StripeRadio -->
        <Style TargetType="{x:Type RadioButton}" x:Key="StripeRadio">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <BulletDecorator Cursor="Hand">
                            <!--Text element-->
                            <Border Width="100" Height="62" CornerRadius="3" BorderBrush="#FFE2E2E2" BorderThickness="1">
                                <Grid>
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    <!--We don't need any bullet, cause our border is the switching element-->
                                    <Border Margin="10,50,10,5" Background="#FFCDCDCD" CornerRadius="1" Name="RadioMark" />
                                    <!-- To change the apearance to button stripe 2, edit the margins! -->
                                </Grid>

                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFF4EED8" Offset="0" />
                                        <GradientStop Color="#FFC1AB94" Offset="1" />
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                        </BulletDecorator>

                        <!--If item is checked, trigger the visibility of the mark-->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="RadioMark" Property="Background" Value="Gold"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- StripeRadio_small -->
        <Style TargetType="{x:Type RadioButton}" x:Key="StripeRadio_small">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <BulletDecorator Cursor="Hand">
                            <!--Text element-->
                            <Border Width="84" Height="48" CornerRadius="3" BorderBrush="#FF292929" BorderThickness="1">
                                <Grid>
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    <!--We don't need any bullet, cause our border is the switching element-->
                                    <Border Margin="10,35,10,5" Background="#FFCDCDCD" CornerRadius="1" Name="RadioMark" />
                                    <!-- To change the apearance to button stripe 2, edit the margins! -->
                                </Grid>

                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFF4EED8" Offset="0" />
                                        <GradientStop Color="#FFC1AB94" Offset="1" />
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                        </BulletDecorator>

                        <!--If item is checked, trigger the visibility of the mark-->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="RadioMark" Property="Background" Value="Gold"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ColorfulListView -->
        <Style x:Key="ColorfulListView" TargetType="{x:Type ListViewItem}">
            <Style.Triggers>
                <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                    <Setter Property="Background" Value="#FFF7F1E1"/>
                </Trigger>
                <Trigger Property="ItemsControl.AlternationIndex" Value="2">
                    <Setter Property="Background" Value="White"/>
                </Trigger>
            </Style.Triggers>
            <Setter Property="BorderBrush" Value="Gray" />
            <Setter Property="BorderThickness" Value="0,0,0,1" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        </Style>

        <!-- IceIvoryButton -->
        <Style TargetType="Button" x:Key="IceIvoryButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="ButtonBackground" CornerRadius="20" BorderBrush="#FF292929" BorderThickness="1">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                                    <GradientStop Color="#FFF4EED8" Offset="0"/>
                                    <GradientStop Color="#FFC1AB94" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Grid>
                                <Border Margin="18,60,18,10" Background="#FF63BFFF" CornerRadius="1"/>
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="ButtonBackground">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFCDC39D" Offset="0"/>
                                            <GradientStop Color="#FF745C44" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- HotIvoryButton -->
        <Style TargetType="Button" x:Key="HotIvoryButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="ButtonBackground" CornerRadius="20" BorderBrush="#FF292929" BorderThickness="1">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                                    <GradientStop Color="#FFF4EED8" Offset="0"/>
                                    <GradientStop Color="#FFC1AB94" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Grid>
                                <Border Margin="18,60,18,10" Background="#FFCF3333" CornerRadius="1"/>
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="ButtonBackground">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFCDC39D" Offset="0"/>
                                            <GradientStop Color="#FF745C44" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- YellowIvoryButton -->
        <Style TargetType="Button" x:Key="YellowIvoryButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="ButtonBackground" CornerRadius="20" BorderBrush="#FF292929" BorderThickness="1">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                                    <GradientStop Color="#FFF4EED8" Offset="0"/>
                                    <GradientStop Color="#FFC1AB94" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Grid>
                                <Border Margin="18,60,18,10" Background="Gold" CornerRadius="1"/>
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="ButtonBackground">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFCDC39D" Offset="0"/>
                                            <GradientStop Color="#FF745C44" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- GrayIvoryButton -->
        <Style TargetType="Button" x:Key="GrayIvoryButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="ButtonBackground" CornerRadius="20" BorderBrush="#FF292929" BorderThickness="1">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                                    <GradientStop Color="#FFF4EED8" Offset="0"/>
                                    <GradientStop Color="#FFC1AB94" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Grid>
                                <Border Margin="18,60,18,10" Background="#FFCDCDCD" CornerRadius="1"/>
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="ButtonBackground">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFCDC39D" Offset="0"/>
                                            <GradientStop Color="#FF745C44" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--styleCalendar-->
        <Style x:Key="StyleCalendar" TargetType="{x:Type Calendar}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Calendar}">
                        <!-- Wrapping in ViewBox will enlarge calendar of that size.-->
                        <Viewbox Height="300" Width="300">
                            <CalendarItem x:Name="PART_CalendarItem"
                                  Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"/>
                        </Viewbox>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>